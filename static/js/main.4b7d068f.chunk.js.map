{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onSubmit","resetInput","handleChange","currentTarget","value","setState","this","className","type","pattern","title","required","onChange","Component","Filter","ContactList","contacts","deleteContact","map","id","onClick","App","filter","addContact","contactName","contact","push","toLowerCase","newContact","shortid","generate","includes","alert","changeFilter","showFilteredContacts","normalizedFilter","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b7d068f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { name, number } = this.state;\r\n\r\n        this.props.onSubmit(name, number);\r\n\r\n        this.resetInput();\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget\r\n           \r\n        this.setState({       \r\n            [name]: value,\r\n        })   \r\n    }\r\n    \r\n    resetInput = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name, number} = this.state;\r\n\r\n        return (\r\n            <form className=\"add-form\" onSubmit={this.handleSubmit}>\r\n                <label className=\"add-form__label\">\r\n                    Name\r\n                    <input\r\n                        className=\"add-form__input\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                <label className=\"add-form__label\">\r\n                        Number\r\n                    <input\r\n                        className=\"add-form__input\"\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    </label>\r\n\r\n                    <button className=\"add-form__btn\" type=\"submit\">Add contact</button>\r\n                </label>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <div className=\"find-form\">\r\n        <label className=\"find-form__label\">\r\n            Find contact by name\r\n            <input className=\"find-form__input\" type=\"text\" value={value} onChange={onChange}/>\r\n        </label>\r\n    </div>\r\n)\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <div className=\"contact\">\r\n    <ul className=\"contact__list\">\r\n          {contacts.map(({id, name, number}) => (\r\n            <li\r\n              key={id}\r\n              className=\"contact__item\"\r\n            >{name}&nbsp;{number}\r\n              <button\r\n                type=\"button\"\r\n                className=\"contact__btn\"\r\n                onClick={()=>deleteContact(id)}\r\n              >Удалить</button>\r\n            </li>\r\n          ))}\r\n    </ul>\r\n  </div>  \r\n)\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts)\n\n    if (parsedContacts) {\n      this.setState({contacts: parsedContacts})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    \n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  addContact = (name, number) => {\n    const contactName = [];\n    this.state.contacts.map(contact => contactName.push(contact.name.toLowerCase()))\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }   \n  \n    if (contactName.includes(name.toLowerCase())) {\n      return alert(`${name} is alredy in contacts`)\n    } else {\n      this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts]\n    }))\n    }\n  }\n\n  changeFilter = (e) => {\n    this.setState({\n      filter: e.currentTarget.value\n    })\n  }\n\n  showFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }))\n  }\n\n  render() {\n    \n    const { filter } = this.state;\n    const filteredContacts = this.showFilteredContacts();\n    return (\n      <>\n        <div className=\"section\">\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addContact}/>\n\n          <p>Contacts</p>\n\n          <Filter\n            value={filter}\n            onChange={this.changeFilter}\n          />\n\n          <ContactList\n            contacts={filteredContacts}\n            deleteContact={this.deleteContact}\n          />\n        </div>\n      </>\n    )\n  }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}